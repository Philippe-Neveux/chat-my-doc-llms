---
- name: Configure Network and Firewall for BentoML Service
  hosts: all
  become: yes
  vars_files:
    - ../vars/main.yml
    
  tasks:
    - name: Install UFW (Uncomplicated Firewall)
      apt:
        name: ufw
        state: present
        update_cache: yes
        
    - name: Reset UFW to defaults
      ufw:
        state: reset
        
    - name: Set UFW default policies
      ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
        
    - name: Allow SSH access
      ufw:
        rule: allow
        port: '22'
        proto: tcp
        comment: 'SSH access'
        
    - name: Allow BentoML service port
      ufw:
        rule: allow
        port: "{{ firewall_port }}"
        proto: tcp
        comment: 'BentoML Mistral service'
        
    - name: Allow HTTP (optional for reverse proxy)
      ufw:
        rule: allow
        port: '80'
        proto: tcp
        comment: 'HTTP'
        
    - name: Allow HTTPS (optional for reverse proxy)
      ufw:
        rule: allow
        port: '443'
        proto: tcp
        comment: 'HTTPS'
        
    - name: Enable UFW
      ufw:
        state: enabled
        
    - name: Install nginx (optional reverse proxy)
      apt:
        name: nginx
        state: present
      tags: nginx
      
    - name: Create nginx configuration for BentoML
      template:
        src: "../templates/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ service_name }}"
        backup: yes
      notify: restart nginx
      tags: nginx
      
    - name: Enable nginx site
      file:
        src: "/etc/nginx/sites-available/{{ service_name }}"
        dest: "/etc/nginx/sites-enabled/{{ service_name }}"
        state: link
      notify: restart nginx
      tags: nginx
      
    - name: Remove default nginx site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: restart nginx
      tags: nginx
      
    - name: Test nginx configuration
      command: nginx -t
      register: nginx_test
      changed_when: false
      tags: nginx
      
    - name: Display nginx test result
      debug:
        msg: "{{ nginx_test.stdout }}"
      tags: nginx
      
    - name: Start and enable nginx
      systemd:
        name: nginx
        state: started
        enabled: yes
      tags: nginx
      
    - name: Display firewall status
      command: ufw status verbose
      register: ufw_status
      changed_when: false
      
    - name: Show firewall configuration
      debug:
        msg: "{{ ufw_status.stdout_lines }}"
        
  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted